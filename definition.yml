method:
  id: slice
  name: SLICE
  tool_id: slice
  source: tool
  platform: R
  url: https://research.cchmc.org/pbge/slice.html
  license: GPL-3
  authors:
  - given: Yan
    family: Xu
    email: yan.xu@cchmc.org
    github: xu-lab
  - given: Minzhe
    family: Guo
    email: minzhe.guo@cchmc.org
    github: minzheguo

manuscript:
  doi: 10.1093/nar/gkw1278
  google_scholar_cluster_id: '9264372425710097325'
  publication_date: '2016-12-19'

container:
  url: https://github.com/dynverse/ti_slice
  docker: dynverse/ti_slice

wrapper:
  type: trajectory
  topology_inference: free
  trajectory_types:
  - linear
  - bifurcation
  - convergence
  - multifurcation
  - binary_tree
  - tree
  input_required: expression
  input_optional:
  - groups_id
  - features_id

parameters:
  - id: lm.method
    type: character
    default: clustering
    values:
    - clustering
    - graph
    description: Select "clustering" based or "graph" based method to infer lineage
      model
  - id: model.type
    type: character
    default: tree
    values:
    - tree
    - graph
    description: 'The type of models that will be infered: "tree" - directed minimum
      spanning tree based, "graph" - directed graph based'
  - id: ss.method
    type: character
    default: all
    values:
    - all
    - top
    - pcst
    description: "The method for defining core cell set for stable state detection:
      \nall - all the cells in a cluster constitute the core cell set; \ntop - cells
      with scEntropy lower than the ss.threshold quantile of all the values in a cluster
      constitute the core cell set; \npcst - cells with scEntropy lower than the ss.threshold
      quantile of all the values in a cluster constitute the prize nodes, linear prize-collecting
      steiner tree algorithm is used to approximate an optimal subnetwork, the cells
      in the subnetwork constitute the core cell set. Stable states are defined as
      the centroids of the core cell sets."
  - id: ss.threshold
    type: numeric
    distribution:
      type: uniform
      upper: 1.0
      lower: 0.0e+00
    default: 0.25
    description: 'The threshold used when ss.method is "top" or "pcst". Default: 0.25.'
  - id: community.method
    type: character
    default: louvain
    values:
    - fast_greedy
    - edge_betweenness
    - label_prop
    - leading_eigen
    - louvain
    - spinglass
    - walktrap
    - auto
    description: "The method for network community detection. \nMost of the community
      detection methods implemented in the igraph package are supported, \nincluding
      \"fast_greedy\", \"edge_betweenness\", \"label_prop\", \"leading_eigen\",\"louvain\",\"spinglass\",
      \"walktrap\". \nIf this parameter is set to \"auto\", the algorithm will perform
      all the community detection methods and select the one that generates the communities
      with best modularity. \nOnly take effect when lm.method is \"graph\""
  - id: cluster.method
    type: character
    default: kmeans
    values:
    - kmeans
    - pam
    description: Use "kmeans" or "pam" to divide cells into clusters. Only take effect
      when lm.method is "clustering"
  - id: k
    type: integer
    default: 0
    distribution:
      type: uniform
      lower: 0
      upper: 20
    description: The number of cell clusters. If NULL, Gap statistic will be used
      to determine an optimal k.
  - id: k.max
    type: integer
    default: 10
    distribution:
      type: uniform
      upper: 20
      lower: 3
    description: The "k.max" parameter of cluster::clusGap(); used when k is NULL.
  - id: B
    type: integer
    default: 100
    distribution:
      type: uniform
      upper: 500
      lower: 3
    description: The "B" parameter of cluster::clusGap(); used when k is NULL
  - id: k.opt.method
    type: character
    default: firstmax
    values:
    - firstmax
    - globalmax
    - Tibs2001SEmax
    - firstSEmax
    - globalSEmax
    description: The "method" parameter of cluster::maxSE(); used when k is NULL
